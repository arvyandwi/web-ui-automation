name: API Automation Workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: Build with Gradle Wrapper
      run: chmod +x ./gradlew

    - name: Execute Test
      run: ./gradlew testApi

    # Install Allure Commandline
    - name: Install Allure Commandline
      run: |
        curl -o allure-commandline.zip -L https://github.com/allure-framework/allure2/releases/download/2.16.1/allure-2.16.1.zip
        unzip allure-commandline.zip -d allure
        sudo mv allure /usr/local/bin/allure

    - name: Generate Allure Report
      run: allure generate build/allure-results --clean -o build/allure-report

    # Archive Test Result
    - name: Archive Test Result
      uses: actions/upload-artifact@v4.6.0
      if: always()
      with:
        name: API Test Report
        path: allure-report

    # Deploy to Github Pages
    - name: Deploy Reports to Github Pages
      if: always()
      uses: peaceiris/actions-gh-pages@v4.0.0
      with:
        personal_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: allure-report
